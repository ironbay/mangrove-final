type Article {
  comments: [Comment!]!
  id: ID!
  title: ID!
  url: ID!
}

type Comment {
  id: String!
  text: String!
}

type Filter {
  id: String!
  kind: String!
  op: String!
  value: Value!
}

type Mutation {
  addComment(articleID: String!, text: String!): Comment!
  createArticle(title: String!, url: String!): Article!
  createSlackConnection(code: String!, userID: String!): SlackConnection
  removeComment(id: String!): Comment!
}

type NumberType {
  value: Float!
}

type Pipe {
  enabled: Boolean!
  id: ID!
  name: String!
  plaidSources: [PlaidSource!]!
}

type PlaidSource {
  account: PlaidSourceAccountType!
  filters: [Filter!]!
  id: ID!
  institution: String!
}

type PlaidSourceAccountType {
  kind: String!
  name: String!
}

type PlaidSourceInstitutionType {
  logo: String!
  name: String!
}

type Query {
  articles: [Article!]!
  pipe(pipeID: String!): Pipe!
  pipes(userID: String!): [Pipe!]
  slackConnections(userID: String!): [SlackConnection!]
}

type SlackChannel {
  id: ID!
  name: ID!
}

type SlackConnection {
  channels: [SlackChannel!]!
  id: ID!
  team: SlackTeam!
}

type SlackTeam {
  id: ID!
  name: String!
}

type TextContainsType {
  value: [String!]!
}

type TextType {
  value: String!
}

union Value = NumberType | TextContainsType | TextType